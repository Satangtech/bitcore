version: '3'

services:
  node:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8100:8100
      - 3000:3000
      - 9229:9229
    environment:
      - DB_HOST=db
      - DB_NAME=bitcore
      - BITCORE_CONFIG_PATH=/bitcore/firo-test.config.json
      - STORAGE_URL=http://storage:5555/contracts/
      - CACHE_URL=http://storage:5555/cache/
    platform: linux/amd64
    command: sh -c "cd /bitcore/timeseries && npm run timeseries && cd /bitcore && npm run node" # For API Only cd /bitcore/packages/bitcore-node && npm run api
    tty: true
    restart: always
    volumes:
      - ./packages/bitcore-node/src:/bitcore/packages/bitcore-node/src
      - ./packages/bitcore-node/test:/bitcore/packages/bitcore-node/test
      - ./packages/bitcore-node/.env:/bitcore/packages/bitcore-node/.env
      - ./packages/bitcore-node/build:/bitcore/packages/bitcore-node/build
      - ./packages/bitcore-node/package.json:/bitcore/packages/bitcore-node/package.json
      - ./firo-test.config.json:/bitcore/firo-test.config.json
      - ./timeseries:/bitcore/timeseries
    depends_on:
      - db
      - firovm
      - storage

  storage:
    build:
      context: .
      dockerfile: Dockerfile.storage
    restart: always
    stdin_open: true
    tty: true
    environment:
      - PORT=5555
      - BIND=0.0.0.0
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - REDIS_PASSWORD=Password123!
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory 512mb

  db:
    image: mongo:5
    command: --profile=1 --slowms=20 # for operations that take longer than (ms)

  firovm:
    image: satangtech/firovm-poa:4e0cb5d3019b081d1cd696b4f1bfa709ff5257d2
    tty: true
    stdin_open: true
    working_dir: /root
    command: bash -c "tar xfv firovm.tar && firovmd"
    volumes:
      - ./firovm.tar:/root/firovm.tar
    ports:
      - 1234:1234
      - 11000:11000

  it-test:
    build:
      context: .
      dockerfile: integration-test.Dockerfile
    working_dir: /app
    tty: true
    stdin_open: true
